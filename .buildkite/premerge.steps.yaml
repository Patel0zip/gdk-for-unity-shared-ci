---
# Generated by <circle ci pipeline new>; this file *should* be edited manually to add or modify steps.
#
# Steps are executed based on the version in version control, and so you *do not* need to upload changes to BuildKite, just
#  commit them and send a PR to GitHub as you normally would.
#
# You may find the example pipeline steps listed here helpful: https://buildkite.com/docs/pipelines/defining-steps#example-pipeline but please
#  note that the setup is already done, so you should not manually adjust anything through the BuildKite interface.
#
linux: &linux
  agents:
    - "capable_of_building=gdk-for-unity"
    - "environment=production"
    - "permission_set=builder"
    - "platform=linux"  # if you need a different platform, configure this: macos|linux|windows.
    - "queue=v4-20-07-06-120608-bk13080-eb89af6c"
    - "scaler_version=2"
  timeout_in_minutes: 60 # TODO(ENG-548): reduce timeout once agent-cold-start is optimised.
  retry:
    automatic:
        # This is designed to trap and retry failures because agent lost connection. Agent exits with -1 in this case.
      - exit_status: -1
        limit: 3
        # This is designed to trap and retry failures because of a buildkite bug.
      - exit_status: 255
        limit: 3
        # Workaround for flaky Git clones, likely due to - https://github.com/PowerShell/Win32-OpenSSH/issues/1322
      - exit_status: 128
        limit: 3

# NOTE: step labels turn into commit-status names like {org}/{repo}/{pipeline}/{step-label}, lower-case and hyphenated.
# These are then relied on to have stable names by other things, so once named, please beware renaming has consequences.

dag: true

steps:

  - label: "lint"
    command: bash -c ci/lint.sh
    <<: *linux

  - label: "build :bash:"
    id: "build-test"
    command: bash -c ci/build-test.sh
    <<: *linux # This folds the YAML named anchor into this step. Overrides, if any, should follow, not precede.
    artifact_paths:
      - logs/**/*

  - label: "annotate test results :pencil2:"
    depends_on:
      - step: "build-test"
        allow_failure: true
    plugins:
      - improbable/test-summary#ea146cdfbbc0db1ce8a8f93131f3f4a382d912a1:
          inputs:
            - label: ":octagonal_sign: Test failures "
              artifact_path: "logs/nunit/*.xml"
              type: nunit
          formatter:
            type: details
    <<: *linux
